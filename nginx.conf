user  nginx;
worker_processes  1;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
  worker_connections  1024;
}
http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log  /var/log/nginx/access.log  main;
  sendfile        on;
  keepalive_timeout  65;
  server {
    listen       80 default_server;
    listen       [::]:80 default_server;
    server_name  kiinse.me www.kiinse.me;
    root   /usr/share/nginx/html;
    location / {
      root   /app;
      index  index.html;
      try_files $uri $uri/ /index.html;
    }
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
     }
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_certificate /etc/letsencrypt/live/kiinse.me/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/kiinse.me/privkey.pem; # managed by Certbot
  }
  server {
      listen       443 ssl http2 default_server;
      listen       [::]:443 ssl http2 default_server;
      server_name  kiinse.me www.kiinse.me;
      root   /usr/share/nginx/html;
      location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
      }

      ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
      ssl_certificate /etc/letsencrypt/live/kiinse.me/fullchain.pem; # managed by Certbot
      ssl_certificate_key /etc/letsencrypt/live/kiinse.me/privkey.pem; # managed by Certbot
    }
}
